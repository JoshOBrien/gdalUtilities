[{"path":"https://joshobrien.github.io/gdalUtilities/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joshua O'Brien. Maintainer.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"O'Brien J (2023). gdalUtilities: Wrappers 'GDAL' Utilities Executables. https://github.com/JoshOBrien/gdalUtilities/, https://joshobrien.github.io/gdalUtilities/.","code":"@Manual{,   title = {gdalUtilities: Wrappers for 'GDAL' Utilities Executables},   author = {Joshua O'Brien},   year = {2023},   note = {https://github.com/JoshOBrien/gdalUtilities/, https://joshobrien.github.io/gdalUtilities/}, }"},{"path":"https://joshobrien.github.io/gdalUtilities/index.html","id":"gdal-utility-functions-for-r","dir":"","previous_headings":"","what":"Wrappers for GDAL Utilities Executables","title":"Wrappers for GDAL Utilities Executables","text":"R package sf ships self-contained GDAL executables, including bare bones interface several GDAL-related utility programs collectively known GDAL utilities (full set documented ). utilities, package provides R wrapper whose formal arguments closely mirror GDAL command line interface. R functions package mirror, closely possible, utilities provide interfaces. function name corresponding command-line utility, takes arguments , given inputs arguments, produces identical output. GDAL utilities operate data stored files typically write output directly files. result, processing data stored R’s common spatial formats (.e. supported sp, sf, raster packages) require first writing disk, processing package’s wrapper functions reading back R.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrappers for GDAL Utilities Executables","text":"install development version GitHub, run:","code":"library(devtools) install_github(\"JoshOBrien/gdalUtilities\")"},{"path":"https://joshobrien.github.io/gdalUtilities/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Wrappers for GDAL Utilities Executables","text":"Translating GDAL command-line call equivalent R call , cases, straightforward excercise. , just follow basic rules: Argument names: exceptions, name R argument corresponding GDAL utility’s command line flag gotten removing - -- flag. , instance, call gdalUtilities::gdal_translate(), command line flags -projwin_srs --config become formal arguments projwin_srs config. two exceptions command-line flags -3d -, represented gdalUtilities, formal arguments threeD . Character numeric arguments: Flags followed one character strings numbers may specified passing either character numeric vector corresponding formal argument. , example, shrink size raster \".tif\" 50% dimension, : Logical arguments: Many flags logical, specifying options turned present, absent. equivalent R functions (corresponding GDAL utilities) options default, can turned setting TRUE. gdal_rasterize, instance, one can ‘invert’ rasterization, burning new value pixels covered vector feature, adding flag -. equivalent R function, action triggered setting =TRUE. Repeatable arguments: Several GDAL utilities take one flags potentially ‘repeatable’. gdal_translate, example, allows users add ground control points raster layer, operation accomplished prepending ground control point’s coordinates flag -gcp. R, however, allow repeated arguments, repeated instances flag need instead passed rows matrix. add four ground control points raster using gdal_translate(), example, something like following: Checking call using dryrun = TRUE: quick check one’s call R function corresponds desired command-line equivalent, one can set dryrun = TRUE.","code":"gdal_translate(\"in.tif\", \"out.tif\", outsize = c(\"50%\",\"50%\")) ## Four column matrix supplying: column, row, x-coord, y-coord gcps <- matrix(c(0,  100, 174.761, -36.880,  ## lower-left                  73,   0, 174.769, -36.871,  ## upper-right                  73, 100, 174.769, -36.880,  ## lower-right                   0,   0, 174.761, -36.871), ## upper-left                ncol = 4, byrow = TRUE) in_tif <- \"maunga.tif\" gcp_tif <- \"maunga_gcp.tif\" gdal_translate(in_tif, gcp_tif, gcp = gcps, a_srs = \"EPSG:4326\") gdal_translate(\"in.tif\", \"out.tif\", outsize = c(\"50%\",\"50%\"), dryrun = TRUE) ## [1] \"gdal_translate in.tif out.tif -outsize 50% 50%\"  gdal_translate(in_tif, gcp_tif, gcp = gcps, a_srs = \"EPSG:4326\", dryrun=TRUE) ## gdal_translate maunga.tif maunga_gcp.tif -a_srs EPSG:4326 \\ ## -gcp 0 100 174.761 -36.88 -gcp 73 0 174.769 -36.871 \\ ## -gcp 73 100 174.769 -36.88 -gcp 0 0 174.761 -36.871"},{"path":"https://joshobrien.github.io/gdalUtilities/index.html","id":"supported-gdal-utilities","dir":"","previous_headings":"","what":"Supported GDAL utilities","title":"Wrappers for GDAL Utilities Executables","text":"present, sf::gdal_utils() (thus gdalUtilities package) provides bindings subset GDAL utilities. Lists supported unsupported utilities given :","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/index.html","id":"gdal-utilities-provided-by-this-package","dir":"","previous_headings":"Supported GDAL utilities","what":"GDAL utilities provided by this package","title":"Wrappers for GDAL Utilities Executables","text":"","code":"## Supported 'Raster Programs' gdal_grid gdal_rasterize gdal_translate gdalbuildvrt gdaldem gdalinfo gdalwarp nearblack  ## Supported 'Multidimensional Raster Programs' gdalmdiminfo gdalmdimtranslate  ## Supported 'Vector Programs' ogr2ogr"},{"path":"https://joshobrien.github.io/gdalUtilities/index.html","id":"gdal-utilities-not-provided-by-this-package","dir":"","previous_headings":"Supported GDAL utilities","what":"GDAL utilities not provided by this package","title":"Wrappers for GDAL Utilities Executables","text":"","code":"## Unsupported 'Raster Programs' gdal_contour gdaladdo gdallocationinfo gdalmanage gdaltindex gdaltransform  ## Unsupported 'Vector Programs'  ogrinfo ogrlineref ogrtindex"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalUtilities-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct function(s) in the gdalUtilities package — gdalUtilities-defunct","title":"Defunct function(s) in the gdalUtilities package — gdalUtilities-defunct","text":"functions removed package.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalUtilities-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct function(s) in the gdalUtilities package — gdalUtilities-defunct","text":"","code":"gRasterize(...)"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalUtilities-defunct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defunct function(s) in the gdalUtilities package — gdalUtilities-defunct","text":"... Function arguments","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalUtilities-defunct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defunct function(s) in the gdalUtilities package — gdalUtilities-defunct","text":"gRasterize removed due dependency raster package, gdalUtilities longer Depends. source gRasterize may still found (sourced, using devtools::source_gist()) https://gist.github.com/JoshOBrien/7cf19b8b686e6d6230a78a1a9799883b.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalUtilities-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrappers for 'GDAL' Utilities Executables — gdalUtilities-package","title":"Wrappers for 'GDAL' Utilities Executables — gdalUtilities-package","text":"R's 'sf' package ships self-contained 'GDAL'     executables, including bare bones interface several     'GDAL'-related utility programs collectively known 'GDAL     utilities'. utilities, package provides     R wrapper whose formal arguments closely mirror     'GDAL' command line interface. utilities operate data     stored files typically write output     files. Therefore, process data stored R's common     spatial formats (.e. supported 'sf' 'terra'     packages), first write disk, process     package's wrapper functions reading outputted results     back R. GDAL function arguments introduced GDAL version     3.5.2 earlier supported.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalUtilities-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrappers for 'GDAL' Utilities Executables — gdalUtilities-package","text":"DESCRIPTION file: package yet installed build time.     Index:  package yet installed build time. Wrappers 'GDAL' Utilities Executables.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalUtilities-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrappers for 'GDAL' Utilities Executables — gdalUtilities-package","text":"Joshua O'Brien Maintainer: Joshua O'Brien <joshmobrien@gmail.com>","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdal_grid utility — gdal_grid","title":"Interface to GDAL's gdal_grid utility — gdal_grid","text":"function provides interface mirroring GDAL command-line app gdal_grid. description utility arguments takes, see documentation https://gdal.org/programs/gdal_grid.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdal_grid utility — gdal_grid","text":"","code":"gdal_grid(   src_datasource,   dst_filename,   ...,   ot,   of,   txe,   tye,   tr,   outsize,   a_srs,   zfield,   z_increase,   z_multiply,   a,   spat,   clipsrc,   clipsrcsql,   clipsrclayer,   clipsrcwhere,   l,   where,   sql,   co,   q,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdal_grid utility — gdal_grid","text":"src_datasource Character. Path GDAL-supported readable datasource. dst_filename Character. Path GDAL-supported output file. ... , placeholder argument forces users supply exact names subsequent formal arguments. ot, , txe, tye, tr, outsize, a_srs, zfield, z_increase, z_multiply See GDAL project's gdal_grid documentation details. , spat, clipsrc, clipsrcsql, clipsrclayer, clipsrcwhere See GDAL project's gdal_grid documentation details. l, , sql, co, q See GDAL project's gdal_grid documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdal_grid utility — gdal_grid","text":"Silently returns path dst_filename.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_grid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdal_grid utility — gdal_grid","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdal_grid utility — gdal_grid","text":"","code":"# \\donttest{ ## Set up file paths td <- tempdir() dem_file <- file.path(td, \"dem.csv\") vrt_header_file <- file.path(td, \"tmp.vrt\") out_raster <- file.path(td, \"tmp.tiff\")  ## Create file of points with x-, y-, and z-coordinates pts <-     data.frame(Easting = c(86943.4, 87124.3, 86962.4, 87077.6),                Northing = c(891957, 892075, 892321, 891995),                Elevation = c(139.13, 135.01, 182.04, 135.01)) write.csv(pts, file = dem_file, row.names = FALSE)  ## Prepare a matching VRT file vrt_header <- c( '<OGRVRTDataSource>', '  <OGRVRTLayer name=\"dem\">', paste0('    <SrcDataSource>',dem_file,'<\/SrcDataSource>'), '    <GeometryType>wkbPoint<\/GeometryType>', '    <GeometryField encoding=\"PointFromColumns\" x=\"Easting\" y=\"Northing\" z=\"Elevation\"/>', '  <\/OGRVRTLayer>', '<\/OGRVRTDataSource>' ) cat(vrt_header, file = vrt_header_file, sep = \"\\n\")  ## Test it out gdal_grid(src_datasource = vrt_header_file,           dst_filename = out_raster,           a = \"invdist:power=2.0:smoothing=1.0\",           txe = c(85000, 89000), tye = c(894000, 890000),           outsize = c(400, 400),           of = \"GTiff\", ot = \"Float64\", l = \"dem\")  ## Check that it works if(requireNamespace(\"terra\", quietly = TRUE)) {     library(terra)     plot(rast(out_raster))     text(Northing ~ Easting, data = pts,          labels = seq_len(nrow(pts)), cex = 0.7) } #> terra 1.7.39  # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_rasterize.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdal_rasterize utility — gdal_rasterize","title":"Interface to GDAL's gdal_rasterize utility — gdal_rasterize","text":"function provides interface mirroring GDAL command-line app gdal_rasterize. description utility arguments takes, see documentation https://gdal.org/programs/gdal_rasterize.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_rasterize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdal_rasterize utility — gdal_rasterize","text":"","code":"gdal_rasterize(   src_datasource,   dst_filename,   ...,   b,   i,   at,   burn,   a,   threeD,   add,   l,   where,   sql,   dialect,   of,   a_srs,   to,   co,   a_nodata,   init,   te,   tr,   tap,   ts,   ot,   optim,   q,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_rasterize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdal_rasterize utility — gdal_rasterize","text":"src_datasource Character. Path GDAL-supported readable datasource. dst_filename Character. Path GDAL-supported output file. ... , placeholder argument forces users supply exact names subsequent formal arguments. b, , , burn, , threeD, add, l, , sql, dialect, See GDAL project's gdal_rasterize documentation details. a_srs, , co, a_nodata, init, te, tr, tap, ts, ot, optim, q See GDAL project's gdal_rasterize documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_rasterize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdal_rasterize utility — gdal_rasterize","text":"Silently returns path dst_filename.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_rasterize.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdal_rasterize utility — gdal_rasterize","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_rasterize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdal_rasterize utility — gdal_rasterize","text":"","code":"# \\donttest{ if(require(terra)) {     ## Prepare file paths of example shapefile and template raster file     vect_file <- system.file(\"ex/lux.shp\", package = \"terra\")     td <- tempdir()     rast_file <- file.path(td, \"lux_rast.tif\")      ## Construct and save an appropriately sized 'empty' raster     LUX <- vect(vect_file)     lonlatratio <- 1 / cospi(mean(geom(LUX)[, \"y\"]) / 180)     rr <- rast(ext(LUX),                resolution = c(lonlatratio * 0.01, 0.01),                crs = crs(LUX), vals = NA)      ## Note: this next line warns that raster is empty     writeRaster(rr, filename = rast_file, overwrite = TRUE)      ## Rasterize polygon using empty raster and check that it worked     gdal_rasterize(vect_file, rast_file, a = \"ID_2\")     plot(rast(rast_file)) }  # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdal_translate utility — gdal_translate","title":"Interface to GDAL's gdal_translate utility — gdal_translate","text":"function provides interface mirroring GDAL command-line app gdal_translate. description utility arguments takes, see documentation https://gdal.org/programs/gdal_translate.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdal_translate utility — gdal_translate","text":"","code":"gdal_translate(   src_dataset,   dst_dataset,   ...,   ot,   strict,   IF,   of,   b,   mask,   expand,   outsize,   tr,   r,   scale,   exponent,   unscale,   srcwin,   projwin,   projwin_srs,   srs,   epo,   eco,   a_srs,   a_coord_epoch,   a_ullr,   a_nodata,   a_scale,   a_offset,   colorinterp,   mo,   co,   nogcp,   gcp,   q,   sds,   stats,   noxmp,   norat,   oo,   sd_index,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdal_translate utility — gdal_translate","text":"src_dataset Character. Path GDAL-supported readable datasource. dst_dataset Character. Path GDAL-supported output file. ... , placeholder argument forces users supply exact names subsequent formal arguments. ot, strict, , , b, mask, expand, outsize, tr, r, scale, exponent See GDAL project's gdal_translate documentation details. unscale, srcwin, projwin, projwin_srs, srs, epo, eco See GDAL project's gdal_translate documentation details. a_srs, a_coord_epoch, a_ullr, a_nodata, a_scale, a_offset See GDAL project's gdal_translate documentation details. colorinterp Along colorinterp, arguments named colorinterp_bn, bn refers number band also allowed. See GDAL project's gdal_translate documentation details. mo, co, nogcp, gcp, q, sds, stats, norat, noxmp, oo, sd_index See GDAL project's gdal_translate documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdal_translate utility — gdal_translate","text":"Silently returns path dst_dataset.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_translate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdal_translate utility — gdal_translate","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdal_translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdal_translate utility — gdal_translate","text":"","code":"# \\donttest{ ## Prepare file paths td <- tempdir() in_raster <- file.path(td, \"europe.tif\") out_raster <- file.path(td, \"europe_small.tif\") file.copy(system.file(\"extdata/europe.tif\", package = \"gdalUtilities\"),           to = td) #> [1] TRUE  ## Shrink a tiff by 50% in both x and y dimensions gdal_translate(in_raster, out_raster, outsize = c(\"50%\",\"50%\"))  ## Check that it worked if(require(terra)) {    r1 <- rast(in_raster)   r1[is.na(r1)] <- 0   r1 <- as.factor(r1)   rat <- levels(r1)[[1]]   rat[[\"landcover\"]] <- c(\"water\", \"land\")   levels(r1) <- rat    r2 <- rast(out_raster)   r2[is.na(r2)] <- 0   r2 <- as.factor(r2)   rat <- levels(r2)[[1]]   rat[[\"landcover\"]] <- c(\"water\", \"land\")   levels(r2) <- rat    op <- par(mfcol = c(1, 2))   plot(r1, col = c(\"lightblue\", \"brown\"), legend = FALSE)   plot(r2, col = c(\"lightblue\", \"brown\"), legend = FALSE)   par(op) ## Reset pre-existing parameters }  # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalbuildvrt.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdalbuildvrt utility — gdalbuildvrt","title":"Interface to GDAL's gdalbuildvrt utility — gdalbuildvrt","text":"function provides interface mirroring GDAL command-line app gdalbuildvrt. description utility arguments takes, see documentation https://gdal.org/programs/gdalbuildvrt.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalbuildvrt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdalbuildvrt utility — gdalbuildvrt","text":"","code":"gdalbuildvrt(   gdalfile,   output.vrt,   ...,   tileindex,   resolution,   te,   tr,   tap,   separate,   b,   sd,   allow_projection_difference,   optim,   q,   addalpha,   hidenodata,   srcnodata,   vrtnodata,   ignore_srcmaskband,   a_srs,   r,   oo,   input_file_list,   strict,   non_strict,   overwrite,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalbuildvrt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdalbuildvrt utility — gdalbuildvrt","text":"gdalfile Character vector supplying file paths one input datasets. output.vrt Character. Path output VRT file. Typically, output file suffix \".vrt\". ... , placeholder argument forces users supply exact names subsequent formal arguments. tileindex, resolution, te, tr, tap, separate, b, sd See GDAL project's gdalbuildvrt documentation details. allow_projection_difference, q, optim, addalpha, hidenodata See GDAL project's gdalbuildvrt documentation details. srcnodata, vrtnodata, ignore_srcmaskband, a_srs, r, oo See GDAL project's gdalbuildvrt documentation details. input_file_list, strict, non_strict, overwrite See GDAL project's gdalbuildvrt documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalbuildvrt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdalbuildvrt utility — gdalbuildvrt","text":"Silently returns path output.vrt.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalbuildvrt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdalbuildvrt utility — gdalbuildvrt","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalbuildvrt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdalbuildvrt utility — gdalbuildvrt","text":"","code":"## Prepare file paths td <- tempdir() out_vrt <- file.path(td, \"out.vrt\") layer1 <-     system.file(\"extdata/tahoe_lidar_bareearth.tif\",                 package = \"gdalUtilities\") layer2 <-     system.file(\"extdata/tahoe_lidar_highesthit.tif\",                 package = \"gdalUtilities\")  ## Build VRT and check that it works gdalbuildvrt(gdalfile = c(layer1, layer2), output.vrt = out_vrt) gdalinfo(out_vrt) #> Driver: VRT/Virtual Raster #> Files: /tmp/RtmpdRuzGn/out.vrt #>        /home/runner/work/_temp/Library/gdalUtilities/extdata/tahoe_lidar_bareearth.tif #>        /home/runner/work/_temp/Library/gdalUtilities/extdata/tahoe_lidar_highesthit.tif #> Size is 400, 400 #> Coordinate System is: #> GEOGCRS[\"WGS 84\", #>     DATUM[\"World Geodetic System 1984\", #>         ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>             LENGTHUNIT[\"metre\",1]]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433]], #>     CS[ellipsoidal,2], #>         AXIS[\"geodetic latitude (Lat)\",north, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>         AXIS[\"geodetic longitude (Lon)\",east, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>     ID[\"EPSG\",4326]] #> Data axis to CRS axis mapping: 2,1 #> Origin = (-119.932807193230261,39.291413801394071) #> Pixel Size = (0.000005472861327,-0.000005472861327) #> Corner Coordinates: #> Upper Left  (-119.9328072,  39.2914138) (119d55'58.11\"W, 39d17'29.09\"N) #> Lower Left  (-119.9328072,  39.2892247) (119d55'58.11\"W, 39d17'21.21\"N) #> Upper Right (-119.9306180,  39.2914138) (119d55'50.22\"W, 39d17'29.09\"N) #> Lower Right (-119.9306180,  39.2892247) (119d55'50.22\"W, 39d17'21.21\"N) #> Center      (-119.9317126,  39.2903192) (119d55'54.17\"W, 39d17'25.15\"N) #> Band 1 Block=128x128 Type=Float32, ColorInterp=Gray"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdaldem.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdaldem utility — gdaldem","title":"Interface to GDAL's gdaldem utility — gdaldem","text":"function provides interface mirroring GDAL command-line app gdaldem. description utility arguments takes, see documentation https://gdal.org/programs/gdaldem.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdaldem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdaldem utility — gdaldem","text":"","code":"gdaldem(   mode,   input_dem,   output_map,   ...,   of,   compute_edges,   alg,   b,   co,   q,   z,   s,   az,   alt,   combined,   multidirectional,   igor,   p,   trigonometric,   zero_for_flat,   color_text_file = character(0),   alpha,   exact_color_entry,   nearest_color_entry,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdaldem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdaldem utility — gdaldem","text":"mode Character, one \"hillshade\", \"slope\", \"color-relief\", \"TRI\", \"TPI\", \"roughness\", indicating available processing modes used. input_dem Path GDAL-supported readable DEM datasource. output_map Character. Path GDAL-supported output file. ... , placeholder argument forces users supply exact names subsequent formal arguments. , compute_edges, alg, b, co, q, z, s, az, alt, combined See GDAL project's gdaldem documentation details. multidirectional, igor, p, trigonometric, zero_for_flat See GDAL project's gdaldem documentation details. color_text_file, alpha, exact_color_entry, nearest_color_entry See GDAL project's gdaldem documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdaldem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdaldem utility — gdaldem","text":"Silently returns path output_map.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdaldem.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdaldem utility — gdaldem","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdaldem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdaldem utility — gdaldem","text":"","code":"# \\donttest{ ## Prepare file paths td <- tempdir() in_dem <- system.file(\"extdata/maunga.tif\", package = \"gdalUtilities\") out_slope  <- file.path(td, \"slope.tif\") out_shade  <- file.path(td, \"shade.tif\") out_aspect <- file.path(td, \"aspect.tif\")  ## Apply DEM processing gdaldem(\"slope\", in_dem, out_slope) gdaldem(\"shade\", in_dem, out_shade) gdaldem(\"aspect\", in_dem, out_aspect)  ## View results if(require(terra)) {     op <- par(mfcol = c(1, 2))     plot(rast(in_dem),     main = \"elevation\")     plot(rast(out_slope),  main = \"slope\")     plot(rast(out_shade),  main = \"hillshade\")     plot(rast(out_aspect), main = \"aspect\")     par(op) ## Reset parameters to preexisting values }   # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdalinfo utility — gdalinfo","title":"Interface to GDAL's gdalinfo utility — gdalinfo","text":"function provides interface mirroring GDAL command-line app gdalinfo. description utility arguments takes, see documentation https://gdal.org/programs/gdalinfo.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdalinfo utility — gdalinfo","text":"","code":"gdalinfo(   datasetname,   ...,   json,   mm,   stats,   approx_stats,   hist,   nogcp,   nomd,   norat,   noct,   nofl,   checksum,   proj4,   listmdd,   mdd,   wkt_format,   sd,   oo,   IF,   dryrun = FALSE,   config_options = character(0),   quiet = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdalinfo utility — gdalinfo","text":"datasetname Path GDAL-supported readable datasource. ... , placeholder argument forces users supply exact names subsequent formal arguments. json, mm, stats, approx_stats, hist, nogcp, nomd, norat, noct See GDAL project's gdalinfo documentation details. nofl, checksum, proj4, listmdd, mdd, wkt_format, sd, oo, See GDAL project's gdalinfo documentation details. dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) quiet Logical (default FALSE). TRUE, suppress printing output console.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdalinfo utility — gdalinfo","text":"Silently returns character vector containing     information returned gdalinfo utility.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalinfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdalinfo utility — gdalinfo","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdalinfo utility — gdalinfo","text":"","code":"ff <- system.file(\"extdata/maunga.tif\", package = \"gdalUtilities\") gdalinfo(ff) #> Driver: GTiff/GeoTIFF #> Files: /home/runner/work/_temp/Library/gdalUtilities/extdata/maunga.tif #> Size is 61, 87 #> Coordinate System is: #> PROJCRS[\"NZGD49 / New Zealand Map Grid\", #>     BASEGEOGCRS[\"NZGD49\", #>         DATUM[\"New Zealand Geodetic Datum 1949\", #>             ELLIPSOID[\"International 1924\",6378388,297, #>                 LENGTHUNIT[\"metre\",1]]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>         ID[\"EPSG\",4272]], #>     CONVERSION[\"New Zealand Map Grid\", #>         METHOD[\"New Zealand Map Grid\", #>             ID[\"EPSG\",9811]], #>         PARAMETER[\"Latitude of natural origin\",-41, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8801]], #>         PARAMETER[\"Longitude of natural origin\",173, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8802]], #>         PARAMETER[\"False easting\",2510000, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8806]], #>         PARAMETER[\"False northing\",6023150, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8807]]], #>     CS[Cartesian,2], #>         AXIS[\"(E)\",east, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1]], #>         AXIS[\"(N)\",north, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1]], #>     USAGE[ #>         SCOPE[\"Engineering survey, topographic mapping.\"], #>         AREA[\"New Zealand - North Island, South Island, Stewart Island - onshore.\"], #>         BBOX[-47.33,166.37,-34.1,178.63]], #>     ID[\"EPSG\",27200]] #> Data axis to CRS axis mapping: 1,2 #> Origin = (2667400.000000000000000,6479570.000000000000000) #> Pixel Size = (10.000000000000000,-10.000000000000000) #> Metadata: #>   AREA_OR_POINT=Area #> Image Structure Metadata: #>   COMPRESSION=LZW #>   INTERLEAVE=BAND #> Corner Coordinates: #> Upper Left  ( 2667400.000, 6479570.000) (174d45'39.47\"E, 36d52'25.92\"S) #> Lower Left  ( 2667400.000, 6478700.000) (174d45'40.19\"E, 36d52'54.14\"S) #> Upper Right ( 2668010.000, 6479570.000) (174d46' 4.09\"E, 36d52'25.52\"S) #> Lower Right ( 2668010.000, 6478700.000) (174d46' 4.81\"E, 36d52'53.73\"S) #> Center      ( 2667705.000, 6479135.000) (174d45'52.14\"E, 36d52'39.83\"S) #> Band 1 Block=61x16 Type=Float64, ColorInterp=Gray #>   Min=94.000 Max=195.000  #>   Minimum=94.000, Maximum=195.000, Mean=nan, StdDev=nan #>   NoData Value=-1.69999999999999994e+308 #>   Metadata: #>     STATISTICS_MAXIMUM=195 #>     STATISTICS_MEAN=1.#SNAN #>     STATISTICS_MINIMUM=94 #>     STATISTICS_STDDEV=1.#SNAN"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdiminfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdalmdiminfo utility — gdalmdiminfo","title":"Interface to GDAL's gdalmdiminfo utility — gdalmdiminfo","text":"function provides interface mirroring GDAL command-line app gdalmdiminfo. description utility arguments takes, see documentation https://gdal.org/programs/gdalmdiminfo.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdiminfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdalmdiminfo utility — gdalmdiminfo","text":"","code":"gdalmdiminfo(   datasetname,   ...,   oo,   arrayoption,   detailed,   nopretty,   array,   limit,   stats,   IF,   dryrun = FALSE,   config_options = character(0),   quiet = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdiminfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdalmdiminfo utility — gdalmdiminfo","text":"datasetname Path GDAL-supported readable datasource. ... , placeholder argument forces users supply exact names subsequent formal arguments. oo, arrayoption, detailed, nopretty, array, limit, stats, GDAL project's gdalmdiminfo documentation details. dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) quiet Logical (default FALSE). TRUE, suppress printing output console.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdiminfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdalmdiminfo utility — gdalmdiminfo","text":"Silently returns character vector containing     information JSON format returned gdalmdiminfo     utility.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdiminfo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdalmdiminfo utility — gdalmdiminfo","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdiminfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdalmdiminfo utility — gdalmdiminfo","text":"","code":"# \\donttest{ ff <- system.file(\"nc/cropped.nc\", package = \"sf\") gdalmdiminfo(ff) #> { #>   \"type\": \"group\", #>   \"driver\": \"netCDF\", #>   \"name\": \"/\", #>   \"attributes\": { #>     \"Conventions\": \"CF-1.0\", #>     \"title\": \"Daily-OI-V2, final, Data (Ship, Buoy, AVHRR, GSFC-ice)\", #>     \"History\": \"Tue Feb 13 20:40:49 2018: ncks -d lat,30,40 -d lon,25,50 avhrr-only-v2.19810901.nc -O cropped_example.nc\\nVersion 2.0\", #>     \"creation_date\": \"2011-05-04\", #>     \"Source\": \"NOAA/National Climatic Data Center\", #>     \"Contact\": \"Dick Reynolds, email: Richard.W.Reynolds@noaa.gov & Chunying Liu, email: Chunying.liu@noaa.gov\", #>     \"NCO\": \"4.6.8\" #>   }, #>   \"dimensions\": [ #>     { #>       \"name\": \"time\", #>       \"full_name\": \"/time\", #>       \"size\": 1, #>       \"type\": \"TEMPORAL\", #>       \"indexing_variable\": \"/time\" #>     }, #>     { #>       \"name\": \"zlev\", #>       \"full_name\": \"/zlev\", #>       \"size\": 1, #>       \"type\": \"VERTICAL\", #>       \"indexing_variable\": \"/zlev\" #>     }, #>     { #>       \"name\": \"lat\", #>       \"full_name\": \"/lat\", #>       \"size\": 11, #>       \"type\": \"HORIZONTAL_Y\", #>       \"direction\": \"NORTH\", #>       \"indexing_variable\": \"/lat\" #>     }, #>     { #>       \"name\": \"lon\", #>       \"full_name\": \"/lon\", #>       \"size\": 26, #>       \"type\": \"HORIZONTAL_X\", #>       \"direction\": \"EAST\", #>       \"indexing_variable\": \"/lon\" #>     } #>   ], #>   \"arrays\": { #>     \"anom\": { #>       \"datatype\": \"Int16\", #>       \"dimensions\": [ #>         \"/time\", #>         \"/zlev\", #>         \"/lat\", #>         \"/lon\" #>       ], #>       \"dimension_size\": [ #>         1, #>         1, #>         11, #>         26 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Daily sea surface temperature anomalies\", #>         \"valid_min\": -1200, #>         \"valid_max\": 1200 #>       }, #>       \"unit\": \"degrees C\", #>       \"nodata_value\": -999, #>       \"offset\": 0, #>       \"scale\": 0.00999999977648258209 #>     }, #>     \"err\": { #>       \"datatype\": \"Int16\", #>       \"dimensions\": [ #>         \"/time\", #>         \"/zlev\", #>         \"/lat\", #>         \"/lon\" #>       ], #>       \"dimension_size\": [ #>         1, #>         1, #>         11, #>         26 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Estimated error standard deviation of analysed_sst\", #>         \"valid_min\": 0, #>         \"valid_max\": 1000 #>       }, #>       \"unit\": \"degrees C\", #>       \"nodata_value\": -999, #>       \"offset\": 0, #>       \"scale\": 0.00999999977648258209 #>     }, #>     \"ice\": { #>       \"datatype\": \"Int16\", #>       \"dimensions\": [ #>         \"/time\", #>         \"/zlev\", #>         \"/lat\", #>         \"/lon\" #>       ], #>       \"dimension_size\": [ #>         1, #>         1, #>         11, #>         26 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Sea ice concentration\", #>         \"valid_min\": 0, #>         \"valid_max\": 100 #>       }, #>       \"unit\": \"percentage\", #>       \"nodata_value\": -999, #>       \"offset\": 0, #>       \"scale\": 0.00999999977648258209 #>     }, #>     \"lat\": { #>       \"datatype\": \"Float32\", #>       \"dimensions\": [ #>         \"/lat\" #>       ], #>       \"dimension_size\": [ #>         11 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Latitude\", #>         \"grids\": \"Uniform grid from -89.875 to 89.875 by 0.25\" #>       }, #>       \"unit\": \"degrees_north\" #>     }, #>     \"lon\": { #>       \"datatype\": \"Float32\", #>       \"dimensions\": [ #>         \"/lon\" #>       ], #>       \"dimension_size\": [ #>         26 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Longitude\", #>         \"grids\": \"Uniform grid from 0.125 to 359.875 by 0.25\" #>       }, #>       \"unit\": \"degrees_east\" #>     }, #>     \"sst\": { #>       \"datatype\": \"Int16\", #>       \"dimensions\": [ #>         \"/time\", #>         \"/zlev\", #>         \"/lat\", #>         \"/lon\" #>       ], #>       \"dimension_size\": [ #>         1, #>         1, #>         11, #>         26 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Daily sea surface temperature\", #>         \"valid_min\": -300, #>         \"valid_max\": 4500 #>       }, #>       \"unit\": \"degrees C\", #>       \"nodata_value\": -999, #>       \"offset\": 0, #>       \"scale\": 0.00999999977648258209 #>     }, #>     \"time\": { #>       \"datatype\": \"Float32\", #>       \"dimensions\": [ #>         \"/time\" #>       ], #>       \"dimension_size\": [ #>         1 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Center time of the day\" #>       }, #>       \"unit\": \"days since 1978-01-01 00:00:00\" #>     }, #>     \"zlev\": { #>       \"datatype\": \"Float32\", #>       \"dimensions\": [ #>         \"/zlev\" #>       ], #>       \"dimension_size\": [ #>         1 #>       ], #>       \"attributes\": { #>         \"long_name\": \"Sea surface height\", #>         \"actual_range\": \"0, 0\" #>       }, #>       \"unit\": \"meters\" #>     } #>   }, #>   \"structural_info\": { #>     \"NC_FORMAT\": \"CLASSIC\" #>   } #> } # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdimtranslate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdalmdimtranslate utility — gdalmdimtranslate","title":"Interface to GDAL's gdalmdimtranslate utility — gdalmdimtranslate","text":"function provides interface mirroring GDAL command-line app gdalmdimtranslate. description utility arguments takes, see documentation https://gdal.org/programs/gdalmdimtranslate.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdimtranslate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdalmdimtranslate utility — gdalmdimtranslate","text":"","code":"gdalmdimtranslate(   src_filename,   dst_filename,   ...,   co,   IF,   of,   array,   group,   subset,   scaleaxes,   oo,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdimtranslate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdalmdimtranslate utility — gdalmdimtranslate","text":"src_filename Character. Path GDAL-supported readable datasource. dst_filename Character. Path GDAL-supported output file. ... , placeholder argument forces users supply exact names subsequent formal arguments. co, , , array, group, subset, scaleaxes, oo See GDAL project's gdalmdimtranslate documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdimtranslate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdalmdimtranslate utility — gdalmdimtranslate","text":"Silently returns path dst_filename.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdimtranslate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdalmdimtranslate utility — gdalmdimtranslate","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalmdimtranslate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdalmdimtranslate utility — gdalmdimtranslate","text":"","code":"# \\donttest{ ## A simple dataset bundled with the sf package FF <- system.file(\"nc/cropped.nc\", package = \"sf\") td <- tempdir() out_tiff <- file.path(td, \"out.tiff\") gdalinfo(FF) #> Driver: netCDF/Network Common Data Format #> Files: /home/runner/work/_temp/Library/sf/nc/cropped.nc #> Size is 512, 512 #> Metadata: #>   NC_GLOBAL#Contact=Dick Reynolds, email: Richard.W.Reynolds@noaa.gov & Chunying Liu, email: Chunying.liu@noaa.gov #>   NC_GLOBAL#Conventions=CF-1.0 #>   NC_GLOBAL#creation_date=2011-05-04 #>   NC_GLOBAL#History=Tue Feb 13 20:40:49 2018: ncks -d lat,30,40 -d lon,25,50 avhrr-only-v2.19810901.nc -O cropped_example.nc #> Version 2.0 #>   NC_GLOBAL#NCO=4.6.8 #>   NC_GLOBAL#Source=NOAA/National Climatic Data Center #>   NC_GLOBAL#title=Daily-OI-V2, final, Data (Ship, Buoy, AVHRR, GSFC-ice) #> Subdatasets: #>   SUBDATASET_1_NAME=NETCDF:\"/home/runner/work/_temp/Library/sf/nc/cropped.nc\":anom #>   SUBDATASET_1_DESC=[1x1x11x26] anom (16-bit integer) #>   SUBDATASET_2_NAME=NETCDF:\"/home/runner/work/_temp/Library/sf/nc/cropped.nc\":err #>   SUBDATASET_2_DESC=[1x1x11x26] err (16-bit integer) #>   SUBDATASET_3_NAME=NETCDF:\"/home/runner/work/_temp/Library/sf/nc/cropped.nc\":ice #>   SUBDATASET_3_DESC=[1x1x11x26] ice (16-bit integer) #>   SUBDATASET_4_NAME=NETCDF:\"/home/runner/work/_temp/Library/sf/nc/cropped.nc\":sst #>   SUBDATASET_4_DESC=[1x1x11x26] sst (16-bit integer) #> Corner Coordinates: #> Upper Left  (    0.0,    0.0) #> Lower Left  (    0.0,  512.0) #> Upper Right (  512.0,    0.0) #> Lower Right (  512.0,  512.0) #> Center      (  256.0,  256.0) gdalmdimtranslate(FF, out_tiff, array = \"sst\") gdalinfo(out_tiff) #> Driver: GTiff/GeoTIFF #> Files: /tmp/RtmpdRuzGn/out.tiff #> Size is 26, 11 #> Origin = (6.250000000000000,-82.500000000000000) #> Pixel Size = (0.250000000000000,0.250000000000000) #> Metadata: #>   long_name=Daily sea surface temperature #>   valid_max=4500 #>   valid_min=-300 #> Image Structure Metadata: #>   INTERLEAVE=BAND #> Corner Coordinates: #> Upper Left  (   6.2500000, -82.5000000)  #> Lower Left  (   6.2500000, -79.7500000)  #> Upper Right (  12.7500000, -82.5000000)  #> Lower Right (  12.7500000, -79.7500000)  #> Center      (   9.5000000, -81.1250000)  #> Band 1 Block=26x11 Type=Int16, ColorInterp=Gray #>   NoData Value=-999 #>   Unit Type: degrees C #>   Offset: 0,   Scale:0.00999999977648258 #>   Metadata: #>     DIM_time_INDEX=0 #>     DIM_time_UNIT=days since 1978-01-01 00:00:00 #>     DIM_time_VALUE=1339 #>     DIM_zlev_INDEX=0 #>     DIM_zlev_UNIT=meters #>     DIM_zlev_VALUE=0  ## A more interesting dataset bundled with the stars package if(require(terra)) {     FF <- system.file(\"nc/reduced.nc\", package = \"stars\")     gdalinfo(FF)     td <- tempdir()     out_1_tiff <- file.path(td, \"out_1.tiff\")     gdalmdimtranslate(FF, out_1_tiff, array = \"sst\")     plot(rast(out_1_tiff),          main = \"Sea Surface Temperature\\n(2x2 degree cells)\")     ## Translate to a tiff, coarsen by a factor of 5     out_2_tiff <- file.path(td, \"out_2.tiff\")     gdalmdimtranslate(FF, out_2_tiff, array = \"sst\",                       scaleaxes = \"lon(5),lat(5)\")     plot(rast(out_2_tiff),          main = \"Sea Surface Temperature\\n(10x10 degree cells)\") } #> Driver: netCDF/Network Common Data Format #> Files: /home/runner/work/_temp/Library/stars/nc/reduced.nc #> Size is 512, 512 #> Metadata: #>   NC_GLOBAL#CDI=Climate Data Interface version ?? (http://mpimet.mpg.de/cdi) #>   NC_GLOBAL#CDO=Climate Data Operators version 1.9.0 (http://mpimet.mpg.de/cdo) #>   NC_GLOBAL#Contact=Dick Reynolds, email: Richard.W.Reynolds@noaa.gov & Chunying Liu, email: Chunying.liu@noaa.gov #>   NC_GLOBAL#Conventions=CF-1.0 #>   NC_GLOBAL#creation_date=2011-03-08 #>   NC_GLOBAL#History=Version 2.0 #>   NC_GLOBAL#source_data=ESRL ICOADS, AVHRR7, GSFC ice #>   NC_GLOBAL#title=Daily-OI-V2, final, Data (Ship, Buoy, AVHRR, GSFC-ice) #> Subdatasets: #>   SUBDATASET_1_NAME=NETCDF:\"/home/runner/work/_temp/Library/stars/nc/reduced.nc\":sst #>   SUBDATASET_1_DESC=[1x1x90x180] sst (16-bit integer) #>   SUBDATASET_2_NAME=NETCDF:\"/home/runner/work/_temp/Library/stars/nc/reduced.nc\":anom #>   SUBDATASET_2_DESC=[1x1x90x180] anom (16-bit integer) #>   SUBDATASET_3_NAME=NETCDF:\"/home/runner/work/_temp/Library/stars/nc/reduced.nc\":err #>   SUBDATASET_3_DESC=[1x1x90x180] err (16-bit integer) #>   SUBDATASET_4_NAME=NETCDF:\"/home/runner/work/_temp/Library/stars/nc/reduced.nc\":ice #>   SUBDATASET_4_DESC=[1x1x90x180] ice (16-bit integer) #> Corner Coordinates: #> Upper Left  (    0.0,    0.0) #> Lower Left  (    0.0,  512.0) #> Upper Right (  512.0,    0.0) #> Lower Right (  512.0,  512.0) #> Center      (  256.0,  256.0)   # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalwarp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's gdalwarp utility — gdalwarp","title":"Interface to GDAL's gdalwarp utility — gdalwarp","text":"function provides interface mirroring GDAL command-line app gdalwarp. description utility arguments takes, see documentation https://gdal.org/programs/gdalwarp.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalwarp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's gdalwarp utility — gdalwarp","text":"","code":"gdalwarp(   srcfile,   dstfile,   ...,   s_srs,   t_srs,   ct,   to,   vshift,   novshift,   s_coord_epoch,   t_coord_epoch,   order,   tps,   rpc,   geoloc,   et,   refine_gcps,   te,   te_srs,   tr,   tap,   ts,   ovr,   wo,   ot,   wt,   r,   srcnodata,   dstnodata,   srcalpha,   nosrcalpha,   dstalpha,   wm,   multi,   q,   IF,   of,   co,   cutline,   cl,   cwhere,   csql,   cblend,   crop_to_cutline,   overwrite,   nomd,   cvmd,   setci,   oo,   doo,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalwarp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's gdalwarp utility — gdalwarp","text":"srcfile Character. Path GDAL-supported readable datasource. dstfile Character. Path GDAL-supported output file. ... , placeholder argument forces users supply exact names subsequent formal arguments. s_srs, t_srs, ct, , vshift, novshift See GDAL project's gdalwarp documentation details. s_coord_epoch, t_coord_epoch, order, tps, rpc, geoloc, et See GDAL project's gdalwarp documentation details. refine_gcps, te, te_srs, tr, tap, ts, ovr, wo, ot, wt, r, srcnodata See GDAL project's gdalwarp documentation details. dstnodata, srcalpha, nosrcalpha, dstalpha, wm, multi, q, , , co See GDAL project's gdalwarp documentation details. cutline, cl, cwhere, csql, cblend, crop_to_cutline, overwrite See GDAL project's gdalwarp documentation details. nomd, cvmd, setci, oo, doo See GDAL project's gdalwarp documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalwarp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's gdalwarp utility — gdalwarp","text":"Silently returns path dstfile.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalwarp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's gdalwarp utility — gdalwarp","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/gdalwarp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's gdalwarp utility — gdalwarp","text":"","code":"# \\donttest{ ## Prepare file paths td <- tempdir() in_tif <- file.path(td, \"tahoe.tif\") gcp_tif <- file.path(td, \"tahoe_gcp.tif\") out_tif <- file.path(td, \"tahoe_warped.tif\")  ## Set up some ground control points, then warp file.copy(system.file(\"extdata/tahoe.tif\", package = \"gdalUtilities\"),           in_tif) #> [1] TRUE ## Four numbers: column, row, x-coord, y-coord gcp <- matrix(c(100, 300, -119.93226, 39.28977,  ## A                 0,   300, -119.93281, 39.28977,  ## B                 100, 400, -119.93226, 39.28922,  ## C                 0,   400, -119.93281, 39.28922,  ## lower-left                 400,   0, -119.93067, 39.29136,  ## upper-right                 400, 400, -119.93062, 39.28922,  ## lower-right                 0,     0, -119.93281, 39.29141), ## upper-left               ncol = 4, byrow = TRUE)  ## Add ground control points. (For some reason, this drops CRS, so ## it needs to be explicitly given via `a_srs` argument.) gdal_translate(in_tif, gcp_tif, gcp = gcp, a_srs = \"EPSG:4326\") gdalwarp(gcp_tif, out_tif, r = \"bilinear\")  ## Check that it worked if(require(terra)) {     op <- par(mfcol = c(1, 2))     r1 <- plot(rast(in_tif), main = \"Original raster\")     r2 <- plot(rast(out_tif), main = \"Warped raster\")     par(op) ## Reset preexisting parameters }  # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/nearblack.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's nearblack utility — nearblack","title":"Interface to GDAL's nearblack utility — nearblack","text":"function provides interface mirroring GDAL command-line app nearblack. description utility arguments takes, see documentation https://gdal.org/programs/nearblack.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/nearblack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's nearblack utility — nearblack","text":"","code":"nearblack(   infile,   o = infile,   ...,   of,   white,   color,   near,   nb,   setalpha,   setmask,   q,   co,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/nearblack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's nearblack utility — nearblack","text":"infile Character. Path GDAL-supported readable datasource. o Optionally, character string giving path GDAL-supported output file. supplied, defaults codeinfile=, indicating input file modified place. ... , placeholder argument forces users supply exact names subsequent formal arguments. , white, color, near, nb, setalpha, setmask, q, co See GDAL project's nearblack documentation details. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/nearblack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's nearblack utility — nearblack","text":"Silently returns path o.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/nearblack.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's nearblack utility — nearblack","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/nearblack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's nearblack utility — nearblack","text":"","code":"# \\donttest{ td <- tempdir() a_rast <- file.path(td, \"a.tif\") b_rast <- file.path(td, \"b.tif\") file.copy(system.file(\"extdata/tahoe.tif\", package = \"gdalUtilities\"),           a_rast) #> [1] TRUE file.copy(system.file(\"extdata/tahoe.tif\", package = \"gdalUtilities\"),           b_rast) #> [1] TRUE nearblack(a_rast, b_rast, of = \"GTiff\", near = 150)  ## Check that it worked if(require(terra)) {     op <- par(mfcol = c(1, 2))     r1 <- plot(rast(a_rast))     r2 <- plot(rast(b_rast))     par(op) ## Reset preexisting parameters }  # }"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/ogr2ogr.html","id":null,"dir":"Reference","previous_headings":"","what":"Interface to GDAL's ogr2ogr utility — ogr2ogr","title":"Interface to GDAL's ogr2ogr utility — ogr2ogr","text":"function provides interface mirroring GDAL command-line app ogr2ogr.  description utility arguments takes, see documentation https://gdal.org/programs/ogr2ogr.html.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/ogr2ogr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interface to GDAL's ogr2ogr utility — ogr2ogr","text":"","code":"ogr2ogr(   src_datasource_name,   dst_datasource_name,   ...,   layer,   f,   append,   overwrite,   update,   select,   progress,   sql,   dialect,   where,   skipfailures,   spat,   spat_srs,   geomfield,   dsco,   lco,   nln,   nlt,   dim,   a_srs,   t_srs,   s_srs,   ct,   preserve_fid,   fid,   limit,   oo,   doo,   gt,   ds_transaction,   clipsrc,   clipsrcsql,   clipsrclayer,   clipsrcwhere,   clipdst,   clipdstsql,   clipdstlayer,   clipdstwhere,   wrapdateline,   datelineoffset,   simplify,   segmentize,   makevalid,   fieldTypeToString,   unsetFieldWidth,   mapFieldType,   fieldmap,   splitlistfields,   maxsubfields,   resolveDomains,   explodecollections,   zfield,   gcp,   order,   tps,   s_coord_epoch,   t_coord_epoch,   a_coord_epoch,   addfields,   unsetFid,   emptyStrAsNull,   relaxedFieldNameMatch,   forceNullable,   unsetDefault,   nomd,   mo,   noNativeData,   config_options = character(0),   dryrun = FALSE )"},{"path":"https://joshobrien.github.io/gdalUtilities/reference/ogr2ogr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interface to GDAL's ogr2ogr utility — ogr2ogr","text":"src_datasource_name Character. Path GDAL-supported readable datasource. dst_datasource_name Character. Path GDAL-supported output file. ... , placeholder argument forces users supply exact names subsequent formal arguments. layer, f, append, overwrite, update, select, progress, sql, dialect See GDAL project's ogr2ogr documentation details. , skipfailures, spat, spat_srs, geomfield, dsco, lco, nln, nlt See ogr2ogr documentation. dim, a_srs, t_srs, s_srs, ct, preserve_fid, fid, limit, oo, doo, gt See See ogr2ogr documentation. ds_transaction, clipsrc, clipsrcsql, clipsrclayer, clipsrcwhere See ogr2ogr documentation. clipdst, clipdstsql, clipdstlayer, clipdstwhere, wrapdateline See ogr2ogr documentation. datelineoffset, simplify, segmentize, makevalid, addfields See See ogr2ogr documentation. fieldmap, splitlistfields, maxsubfields See ogr2ogr documentation. resolveDomains, explodecollections, zfield, gcp, order, tps See ogr2ogr documentation. s_coord_epoch, t_coord_epoch, a_coord_epoch See ogr2ogr documentation. unsetFid, emptyStrAsNull, relaxedFieldNameMatch, forceNullable See See ogr2ogr documentation. unsetDefault, fieldTypeToString, unsetFieldWidth, mapFieldType See ogr2ogr documentation. nomd, mo, noNativeData See ogr2ogr documentation. config_options named character vector GDAL config options, form c(option1=value1, option2=value2). (See complete list supported config options.) dryrun Logical (default FALSE). TRUE, instead executing requested call GDAL, function print command-line call produce equivalent output.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/ogr2ogr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interface to GDAL's ogr2ogr utility — ogr2ogr","text":"Silently returns path dst_datasource_name.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/ogr2ogr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interface to GDAL's ogr2ogr utility — ogr2ogr","text":"Joshua O'Brien","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/reference/ogr2ogr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interface to GDAL's ogr2ogr utility — ogr2ogr","text":"","code":"# \\donttest{ ## Prepare file paths td <- tempdir() lux <- system.file(\"ex/lux.shp\", package = \"terra\") lux_merc <- file.path(td, \"mercator.shp\") lux_lcc <- file.path(td, \"lcc.shp\")  ## Reproject to 'WGS 84/World Mercator' ## https://en.wikipedia.org/wiki/Mercator_projection ogr2ogr(lux, lux_merc, t_srs = \"EPSG:3395\", overwrite = TRUE) ## Reproject to a Canadian 'Lambert conformal conic projection' ## https://en.wikipedia.org/wiki/Lambert_conformal_conic_projection ogr2ogr(lux, lux_lcc, t_srs = \"EPSG:3347\", overwrite = TRUE)  if(require(terra)) {     op <- par(mfcol = c(1,2))     plot(vect(lux_merc), main = \"WGS 84\",          border = \"darkgrey\", col = gray.colors(12))     plot(vect(lux_lcc), main = \"LCC\",          border = \"darkgrey\", col = gray.colors(12))     par(op) }  # }"},{"path":"https://joshobrien.github.io/gdalUtilities/news/index.html","id":"changes-since-cran-release-of-version-125","dir":"Changelog","previous_headings":"","what":"Changes since CRAN release of Version 1.2.5","title":"Changes since CRAN release of Version 1.2.5","text":"CRAN release: 2023-08-10 Remove test suite, hasn’t used since Version 1.2.0. tests involved comparison results now-defunct/archived gdalUtils package. Also removed longer needed testthat package Suggests.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/news/index.html","id":"version-125","dir":"Changelog","previous_headings":"","what":"Version 1.2.5","title":"Version 1.2.5","text":"CRAN release: 2023-08-10 Removed uses raster rasterVis packages examples function help pages, replacing function calls terra package.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/news/index.html","id":"version-124","dir":"Changelog","previous_headings":"","what":"Version 1.2.4","title":"Version 1.2.4","text":"CRAN release: 2023-03-21 Added config_options= argument packaged utilities, supporting usage GDAL Utility config options documented https://gdal.org/user/configoptions.html. (change enabled recent addition argument name sf::gdal_utils().)","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/news/index.html","id":"version-123","dir":"Changelog","previous_headings":"","what":"Version 1.2.3","title":"Version 1.2.3","text":"CRAN release: 2022-12-15 Removed rgdal Suggests added explicit dependency raster version >= 3.6-1, request Roger Bivand. (rgdal soon retired, described detail .)","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/news/index.html","id":"version-122","dir":"Changelog","previous_headings":"","what":"Version 1.2.2","title":"Version 1.2.2","text":"CRAN release: 2022-11-28 New functions gdalmdiminfo() gdalmdimtranslate() support calls GDAL utilities. gdalinfo() gains quiet= argument controls whether information returns printed console. (Formerly, printing console always .) gdalinfo() now (silently) returns character vector containing report returned GDAL’s gdalinfo utility. (now, simply returned name file supplied datasetname= formal argument.) Added formal arguments corresponding new command line options added GDAL versions 3.2.1 3.5.2. Added dependency package sf >= 1.0-9.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/news/index.html","id":"version-121","dir":"Changelog","previous_headings":"","what":"Version 1.2.1","title":"Version 1.2.1","text":"CRAN release: 2022-04-19 Removed gdalUtils Suggests, removed CRAN 2022-04-18. (used package’s test suite, comparing results package.) Added rgdal Suggests, cure CRAN complaint needing available run example ?gdal_grid.","code":""},{"path":"https://joshobrien.github.io/gdalUtilities/news/index.html","id":"version-120","dir":"Changelog","previous_headings":"","what":"Version 1.2.0","title":"Version 1.2.0","text":"CRAN release: 2021-10-26 Removed gRasterize() function , result, gdalUtilities package’s dependency raster package dependencies. (Thanks Jakub Nowosad suggestion.) source code gRasterize() still available GitHub gist https://gist.github.com/JoshOBrien/7cf19b8b686e6d6230a78a1a9799883b may sourced using, e.g., devtools::source_gist().","code":""}]
