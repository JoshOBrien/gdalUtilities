% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ogr2ogr.R
\name{ogr2ogr}
\alias{ogr2ogr}
\title{Interface to GDAL's ogr2ogr utility}
\usage{
ogr2ogr(
  src_datasource_name,
  dst_datasource_name,
  ...,
  layer,
  f,
  append,
  overwrite,
  update,
  select,
  progress,
  sql,
  dialect,
  where,
  skipfailures,
  spat,
  spat_srs,
  geomfield,
  dsco,
  lco,
  nln,
  nlt,
  dim,
  a_srs,
  t_srs,
  s_srs,
  ct,
  preserve_fid,
  fid,
  limit,
  oo,
  doo,
  gt,
  ds_transaction,
  clipsrc,
  clipsrcsql,
  clipsrclayer,
  clipsrcwhere,
  clipdst,
  clipdstsql,
  clipdstlayer,
  clipdstwhere,
  wrapdateline,
  datelineoffset,
  simplify,
  segmentize,
  makevalid,
  fieldTypeToString,
  unsetFieldWidth,
  mapFieldType,
  fieldmap,
  splitlistfields,
  maxsubfields,
  resolveDomains,
  explodecollections,
  zfield,
  gcp,
  order,
  tps,
  s_coord_epoch,
  t_coord_epoch,
  a_coord_epoch,
  addfields,
  unsetFid,
  emptyStrAsNull,
  relaxedFieldNameMatch,
  forceNullable,
  unsetDefault,
  nomd,
  mo,
  noNativeData,
  config_options = character(0),
  dryrun = FALSE
)
}
\arguments{
\item{src_datasource_name}{Character. Path to a GDAL-supported
readable datasource.}

\item{dst_datasource_name}{Character. Path to a GDAL-supported
output file.}

\item{...}{Here, a placeholder argument that forces users to
supply exact names of all subsequent formal arguments.}

\item{layer, f, append, overwrite, update, select, progress, sql, dialect}{See the GDAL project's
\href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation} for details.}

\item{where, skipfailures, spat, spat_srs, geomfield, dsco, lco, nln, nlt}{See \href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{dim, a_srs, t_srs, s_srs, ct, preserve_fid, fid, limit, oo, doo, gt}{See the See
\href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{ds_transaction, clipsrc, clipsrcsql, clipsrclayer, clipsrcwhere}{See \href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{clipdst, clipdstsql, clipdstlayer, clipdstwhere, wrapdateline}{See \href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{datelineoffset, simplify, segmentize, makevalid, addfields}{See
See \href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{fieldmap, splitlistfields, maxsubfields}{See
\href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{resolveDomains, explodecollections, zfield, gcp, order, tps}{See
\href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{s_coord_epoch, t_coord_epoch, a_coord_epoch}{See
\href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{unsetFid, emptyStrAsNull, relaxedFieldNameMatch, forceNullable}{See See \href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{unsetDefault, fieldTypeToString, unsetFieldWidth, mapFieldType}{See \href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{nomd, mo, noNativeData}{See
\href{https://gdal.org/programs/ogr2ogr.html}{ogr2ogr
documentation}.}

\item{config_options}{A named character vector with GDAL config
options, of the form \code{c(option1=value1, option2=value2)}. (See
\href{https://gdal.org/user/configoptions.html}{here} for a
complete list of supported config options.)}

\item{dryrun}{Logical (default \code{FALSE}). If \code{TRUE},
instead of executing the requested call to GDAL, the function
will print the command-line call that would produce the
equivalent output.}
}
\value{
Silently returns path to \code{dst_datasource_name}.
}
\description{
This function provides an interface mirroring that of the GDAL
command-line app \code{ogr2ogr}.  For a description of the
utility and the arguments that it takes, see the documentation at
\url{https://gdal.org/programs/ogr2ogr.html}.
}
\examples{
\donttest{
## Prepare file paths
td <- tempdir()
lux <- system.file("external/lux.shp", package = "raster")
lux_merc <- file.path(td, "mercator.shp")
lux_lcc <- file.path(td, "lcc.shp")

## Reproject to 'WGS 84/World Mercator'
## https://en.wikipedia.org/wiki/Mercator_projection
ogr2ogr(lux, lux_merc, t_srs = "EPSG:3395", overwrite = TRUE)
## Reproject to a Canadian 'Lambert conformal conic projection'
## https://en.wikipedia.org/wiki/Lambert_conformal_conic_projection
ogr2ogr(lux, lux_lcc, t_srs = "EPSG:3347", overwrite = TRUE)

if(requireNamespace("raster", quietly = TRUE)) {
    library(raster)
    op <- par(mfcol = c(1,2))
    plot(shapefile(lux_merc), main = "WGS 84",
         border = "darkgrey", col = gray.colors(12))
    plot(shapefile(lux_lcc), main = "LCC",
         border = "darkgrey", col = gray.colors(12))
    par(op)
}
}
}
\author{
Joshua O'Brien
}
